#!/usr/bin/env bash

PACKAGES="automake libtool texinfo"
OS=`uname -s`
PKG_ADD=
MAKE=make
if [ x"$ARCH" == "x" ]; then
  ARCH=`uname -m`
fi
case "${OS}" in
  CYGWIN*|MINGW*|MSYS*)
    PKG_ADD=echo;;
  Linux)
    if which apt-get 2>/dev/null; then
      PACKAGES="${PACKAGES} gcc g++"
      case "$JDK" in
        oraclejdk8)
          case "$ARCH" in
            i386|i486|i586|i686|x86)
              PACKAGES="${PACKAGES} g++-multilib"
              JDK_DOWNLOAD_URL=http://download.oracle.com/otn-pub/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jdk-8u162-linux-i586.tar.gz
              ;;
            x86_64|amd64)
              JDK_DOWNLOAD_URL=http://download.oracle.com/otn-pub/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jdk-8u162-linux-x64.tar.gz
              ;;
            *)
              echo "unknown arch ${ARCH}" 2>&1
              exit 1
              ;;
          esac
          JAVA_HOME="`pwd`/jdk1.8.0_162"
          ;;
        openjdk7|openjdk8)
          JDK_VERSION=`echo "$JDK" | sed -e 's/^openjdk//g'`
          JDK_INSTALLNAME=openjdk-${JDK_VERSION}-jdk
          JAVA_DIRNAME=java-${JDK_VERSION}-openjdk
          case "$ARCH" in
            i386|i486|i586|i686|x86)
              JDK_INSTALLNAME="${JDK_INSTALLNAME}:i386"
              JAVA_DIRNAME="${JAVA_DIRNAME}-i386"
              PACKAGES="${PACKAGES} g++-multilib"
              ;;
            x86_64|amd64)
              JAVA_DIRNAME="${JAVA_DIRNAME}-amd64"
              ;;
            *)
              echo "unknown arch ${ARCH}" 2>&1
              exit 1
              ;;
          esac
          PACKAGES="${PACKAGES} ${JDK_INSTALLNAME}"
          JAVA_HOME="/usr/lib/jvm/${JAVA_DIRNAME}"
          ;;
        *)
          # use default jdk
          ;;
      esac
      echo 'cd /usr/lib/gcc/x86_64-linux-gnu/4.8 && cp -n crtbeginT.o crtbeginT.orig.o && cp -f crtbeginS.o crtbeginT.o' | sudo bash
      # -q quiet, double q implies -y
      # -y assume yes
      # -f fix-broken attempt to correct a system with broken dependencies in place
      PKG_ADD="sudo apt-get -qqf install"
      export JAVA_HOME
    elif which yum 2>/dev/null; then
      # -q Run without output
      # -y assume yes
      PACKAGES="${PACKAGES} gcc gcc-c++ libgcc.i686 java-1.8.0-openjdk-devel"
      PKG_ADD="sudo yum install -qy"
    else
      echo 'Package manager not found' 2>&1
      exit 1
    fi
    ;;
  Darwin)
    PKG_ADD="brew install"
    ;;
  FreeBSD)
    MAKE=gmake
    PKG_ADD="sudo pkg install -fy"
    case "$JDK" in
      openjdk7) PACKAGES="${PACKAGES} openjdk7";;
      *) PACKAGES="${PACKAGES} openjdk8";;
    esac
    PACKAGES="${PACKAGES} ${MAKE}"
    ;;
  OpenBSD)
    MAKE=gmake
    case "$JDK" in
      openjdk7) JDK_INSTALLNAME=jdk%1.7;;
      *) JDK_INSTALLNAME=jdk%1.8;;
    esac
    PKG_ADD="sudo pkg_add -I"
    PACKAGES="automake%1.15 libtool gcc texinfo ${MAKE} ${JDK_INSTALLNAME}"
    ;;
  *)
    echo 'Platform not support' 2>&1
    exit 1
    ;;
esac

case "$1" in
  fetch)
    git fetch;;
  reset)
    git fetch && rm -rf * && git reset --hard origin/master;;
  install)
    if [ x"${JDK_DOWNLOAD_URL}" != "x" ]; then
      wget --no-check-certificate -c --header "Cookie: oraclelicense=accept-securebackup-cookie" "${JDK_DOWNLOAD_URL}"
      tar -xf `echo "${JDK_DOWNLOAD_URL}" | sed -e 's/^.*\///g'`
    fi
    ${PKG_ADD} ${PACKAGES} || true
    ;;
  test|build|package)
    echo "JAVA_HOME: ${JAVA_HOME}"
    if [ x"$deploy" == xtrue ] &&  git config --get remote.origin.url 2>&1 | grep -F https://github.com/java-native-call/jnc-build -q && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      chmod +x mvnw && ./mvnw -Duser.name=zhanhb -Dmake=${MAKE} deploy -s .travis/settings.xml $*
    else
      chmod +x mvnw && ./mvnw -Dmake=${MAKE} install $*
    fi
    ;;
esac
