<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.java-native-call</groupId>
        <artifactId>jnc-parent</artifactId>
        <version>${revision}</version>
    </parent>
    <artifactId>jnc-runtime</artifactId>

    <properties>
        <jni.header.dir>${project.basedir}/../libjnc/jni</jni.header.dir>
        <module.name>com.github.jnc.runtime</module.name>
        <osgi.export>!jnc.provider.*,jnc.*;-noimport:=true</osgi.export>
        <osgi.import>javax.annotation.*;resolution:=optional,*</osgi.import>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>${groovy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>-h</arg>
                        <arg>${jni.header.dir}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <executions>
                    <execution>
                        <id>hide-annotation</id>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <scripts>
                                <script>${project.basedir}/src/test/groovy/hide-annotation.groovy</script>
                            </scripts>
                            <properties>
                                <ant/>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <properties>
                <jni.dist.dir>${project.build.directory}/dist</jni.dist.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>process-classes</phase>
                                <configuration>
                                    <target>
                                        <property name="cmake.build.srcdir" value="${project.basedir}/../libjnc"/>
                                        <ant antfile="${project.basedir}/src/main/scripts/ant.xml"/>
                                        <mkdir dir="${jni.dist.dir}"/>
                                        <copy preservelastmodified="true" todir="${project.build.outputDirectory}/jnc/provider/native">
                                            <fileset dir="${jni.dist.dir}"/>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>built-lib</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jni.libs.dir>${basedir}/../lib</jni.libs.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-native-binary</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${jni.libs.dir}</directory>
                                            <filtering>false</filtering>
                                            <targetPath>jnc/provider/native</targetPath>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
